// Generated by data binding compiler. Do not edit!
package com.example.wordbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.wordbook.R;
import com.example.wordbook.database.Group;
import com.example.wordbook.grouplist.GroupListAdapter;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ViewholderGroupBinding extends ViewDataBinding {
  @NonNull
  public final TextView groupname;

  @NonNull
  public final View view;

  @Bindable
  protected Group mGrouptitle;

  @Bindable
  protected GroupListAdapter.GroupClickListener mOnClickGroup;

  @Bindable
  protected GroupListAdapter.DeleteClickListener mOnClickDeleteGroup;

  protected ViewholderGroupBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView groupname, View view) {
    super(_bindingComponent, _root, _localFieldCount);
    this.groupname = groupname;
    this.view = view;
  }

  public abstract void setGrouptitle(@Nullable Group grouptitle);

  @Nullable
  public Group getGrouptitle() {
    return mGrouptitle;
  }

  public abstract void setOnClickGroup(@Nullable GroupListAdapter.GroupClickListener onClickGroup);

  @Nullable
  public GroupListAdapter.GroupClickListener getOnClickGroup() {
    return mOnClickGroup;
  }

  public abstract void setOnClickDeleteGroup(
      @Nullable GroupListAdapter.DeleteClickListener onClickDeleteGroup);

  @Nullable
  public GroupListAdapter.DeleteClickListener getOnClickDeleteGroup() {
    return mOnClickDeleteGroup;
  }

  @NonNull
  public static ViewholderGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.viewholder_group, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ViewholderGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ViewholderGroupBinding>inflateInternal(inflater, R.layout.viewholder_group, root, attachToRoot, component);
  }

  @NonNull
  public static ViewholderGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.viewholder_group, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ViewholderGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ViewholderGroupBinding>inflateInternal(inflater, R.layout.viewholder_group, null, false, component);
  }

  public static ViewholderGroupBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ViewholderGroupBinding bind(@NonNull View view, @Nullable Object component) {
    return (ViewholderGroupBinding)bind(component, view, R.layout.viewholder_group);
  }
}
